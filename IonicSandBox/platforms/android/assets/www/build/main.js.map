{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/home/home.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/app/midi.util/midi.ts","../../src/app/midi.util/hexa.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 109;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 109\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 150;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 150\n// module chunks = 0","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\nimport { File, IWriteOptions } from '@ionic-native/file';\nimport { Media } from '@ionic-native/media';\nimport { Midi } from '../../app/midi.util/midi';\n\nimport { FileChooser } from '@ionic-native/file-chooser';\nimport { FilePath } from '../../../node_modules/@ionic-native/file-path';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  fileUri: string;\n  fileConvertedPath: string;\n  midi;\n\n  actualMidiFile;\n\n  constructor(public navCtrl: NavController, private file: File , private media: Media, private fileChooser:FileChooser, private filePath: FilePath) {\n  }\n\n  selectFileURI(){\n    this.fileChooser.open()\n      .then(uri => {\n        this.fileUri = uri\n        this.filePath.resolveNativePath(uri)\n          .then(path => this.fileConvertedPath = path)\n          .catch(e => console.log(e));\n      })\n      .catch(e => console.log(e));\n  }\n\n\n  playMidiFile() {\n    //const file = this.media.create(this.file.externalRootDirectory + '/Download/' + 'testenew2.mid');\n    const file = this.media.create(this.fileConvertedPath);\n    file.play();\n  }\n\n  loadMidi() {\n    /*alert(this.fileConvertedPath.substr(0, this.fileConvertedPath.lastIndexOf('/')));\n    alert(this.fileConvertedPath.substr(this.fileConvertedPath.lastIndexOf('/') + 1));*/\n\n    this.file.readAsBinaryString(this.fileConvertedPath.substr(0, this.fileConvertedPath.lastIndexOf('/')), this.fileConvertedPath.substr(this.fileConvertedPath.lastIndexOf('/') + 1))\n    .then(a=>{\n      try {\n        this.actualMidiFile = a;\n        let midi: Midi = new Midi();\n        midi.setupMidiFromFile(a);\n        this.midi = midi;\n      } catch (e) {\n        alert(JSON.stringify(e));\n      }\n    }).catch(e=>{\n      alert(JSON.stringify(e));\n    });  \n  }\n\n  createNewMidiFile(){\n\n\n    alert(this.file.cacheDirectory);\n    this.file.createFile(this.file.cacheDirectory ,'newMidiFile.mid', true)\n    .then(a => alert(JSON.stringify(a)))\n    .catch(e => alert(JSON.stringify(e)));\n\n    /*let options: IWriteOptions = { replace: true };\n    alert(this.actualMidiFile);\n    this.fileConvertedPath = this.file.cacheDirectory + 'newMidiFile.mid'\n    this.file.writeFile(this.file.cacheDirectory ,'newMidiFile.mid', this.actualMidiFile, options)\n      .then(a => alert(JSON.stringify(a)))\n      .catch(e => alert(JSON.stringify(e)));*/\n  }\n\n  /*vai(){\n    //alert(this.file.externalRootDirectory);\n    //readAsArrayBuffer\n    //readAsBinaryString\n\n    /*const file = this.media.create(this.file.externalRootDirectory + '/Download/' + 'testenew2.mid');\n    file.play();*/\n\n    /*this.file.readAsBinaryString(this.file.externalRootDirectory + '/Download',\n     'testenew2.mid').then(a=>{\n      //alert('Foi!');\n      //alert(JSON.stringify(a));\n      //alert(a);\n      //alert(a.byteLength);\n      \n      try {\n        let midi: Midi = new Midi();\n        midi.setupMidiFromFile(a);\n        \n        /*alert(midi.midiType);\n        alert(midi.numberOfTracks);\n        alert(midi.timeDivision);*/\n      /*} catch (e) {\n        alert('Deu ruim');\n        alert(e);\n      }\n\n      \n      //for (let bb of a) {\n        //alert(bb.charCodeAt(0).toString(16));\n        //file.stop();\n      //} \n      //console.log(a);\n    }).catch(e=>{\n      alert('não');\n      alert(JSON.stringify(e));\n      console.log(e);\n    });\n  }*/\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\n\nimport { File } from '@ionic-native/file';\nimport {Media /*, MediaObject*/} from '@ionic-native/media';\nimport {FileChooser} from '@ionic-native/file-chooser';\nimport {FilePath} from '@ionic-native/file-path';\n\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    File,\n    Media, \n    //MediaObject\n    FileChooser,\n    FilePath\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = HomePage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { ConvertionUtil } from \"./hexa\";\r\n\r\nexport class Midi {\r\n\r\n    private _midiType: MidiType;\r\n    private _numberOfTracks: number;\r\n    //necessário definir como tratar\r\n    private _timeDivision: string;\r\n    private _midiTracks: MidiTrack[];\r\n\r\n    get midiType(): MidiType {\r\n        return this._midiType;\r\n    }\r\n\r\n    set midiType(midiType: MidiType) {\r\n        this._midiType = midiType;\r\n    }\r\n\r\n    get numberOfTracks(): number {\r\n        return this._numberOfTracks;\r\n    }\r\n\r\n    set numberOfTracks(numberOfTracks: number) {\r\n        this._numberOfTracks = numberOfTracks;\r\n    }\r\n\r\n    get timeDivision(): string {\r\n        return this._timeDivision;\r\n    }\r\n\r\n    set timeDivision(timeDivision: string) {\r\n        this._timeDivision = timeDivision;\r\n    }\r\n\r\n    get midiTracks(): MidiTrack[] {\r\n        return this._midiTracks;\r\n    }\r\n\r\n    set midiTracks(midiTracks: MidiTrack[]) {\r\n        this._midiTracks = midiTracks;\r\n    }\r\n\r\n    public setupMidiFromFile(binaryString: string) {\r\n        if (binaryString.substr(0, 4) != 'MThd') {\r\n            throw Error('Midi file must start with \"MThd\" header indication');\r\n        }\r\n        \r\n        let fileMidiType: number = ConvertionUtil.convertBinaryStringToNumber(binaryString.substr(8, 2));\r\n        if (fileMidiType > 0 || fileMidiType < 0) {\r\n            throw Error('Midi file type must be 0');\r\n        }\r\n        this.midiType = fileMidiType;\r\n\r\n        let fileNumberOfTracks: number = ConvertionUtil.convertBinaryStringToNumber(binaryString.substr(10, 2));\r\n        this.numberOfTracks = fileNumberOfTracks;\r\n\r\n        let fileTimeDividion: string = ConvertionUtil.convertBinaryStringToHexString(binaryString.substr(12, 2));\r\n        this.timeDivision = fileTimeDividion;\r\n\r\n        if (binaryString.substr(14, 4) != 'MTrk') {\r\n            throw Error('Midi file track must start with \"MTrk\" header indication');\r\n        }\r\n        this.midiTracks = [];\r\n\r\n        let midiTrack: MidiTrack = new MidiTrack();\r\n        let deltaTime: number = 0;\r\n\r\n        for (let i = 22; i < binaryString.length;) {\r\n\r\n            //deltaTime\r\n            let deltaTimeStart: number = i;\r\n            let deltaTimeLength: number = 1;\r\n\r\n            while (!ConvertionUtil.isLastDeltaTimeByte(binaryString.charAt(deltaTimeStart + deltaTimeLength - 1))) {\r\n                deltaTimeLength++;\r\n                //lança exceção se passar de 4\r\n            }\r\n\r\n            //let teste = binaryString.substr(deltaTimeStart, deltaTimeLength);\r\n\r\n            //calcula delta time\r\n            deltaTime += ConvertionUtil.calculateDeltaTime(binaryString.substr(deltaTimeStart, deltaTimeLength));\r\n\r\n            i += deltaTimeLength;\r\n\r\n            //create event or sum delta time\r\n            let midiEvent: MidiEvent = MidiEvent.getMidiEventData(deltaTime, binaryString.substr(i));\r\n\r\n            //add event to track\r\n            if (midiEvent.loadEvent){\r\n                deltaTime = 0;\r\n                midiTrack.addMidiEvent(midiEvent);\r\n            } \r\n            \r\n            i += midiEvent.getDataLength();\r\n\r\n        }\r\n        let ggg = 0;\r\n    }\r\n}\r\n\r\nexport class MidiTrack {\r\n    private _midiEvents: MidiEvent[];\r\n\r\n    constructor() {\r\n        this.midiEvents = [];\r\n    }\r\n\r\n    get midiEvents(): MidiEvent[]{\r\n        return this._midiEvents;\r\n    }\r\n    \r\n    set midiEvents(midiEvents: MidiEvent[]){\r\n        this._midiEvents = midiEvents;\r\n    }\r\n\r\n    public addMidiEvent(midiEvent: MidiEvent){\r\n        this.midiEvents.push(midiEvent);\r\n    }\r\n\r\n}\r\n\r\nexport class MidiEvent {\r\n    private _deltaTime: string;\r\n    private _midiEventType: MidiEventType;\r\n    private _midiEventData: string;\r\n    private _loadEvent: boolean;\r\n\r\n    constructor(deltaTime: string, midiEventType: MidiEventType, midiEventData: string, loadEvent: boolean){\r\n        this.deltaTime = deltaTime;\r\n        this.midiEventType = midiEventType;\r\n        this.midiEventData = midiEventData;\r\n        this.loadEvent = loadEvent;\r\n    }\r\n\r\n    get deltaTime(): string{\r\n        return this._deltaTime;\r\n    }\r\n    \r\n    set deltaTime(deltaTime: string){\r\n        this._deltaTime = deltaTime;\r\n    }\r\n\r\n    get midiEventType(): MidiEventType{\r\n        return this._midiEventType;\r\n    }\r\n    \r\n    set midiEventType(midiEventType: MidiEventType){\r\n        this._midiEventType = midiEventType;\r\n    }\r\n\r\n    get midiEventData(): string{\r\n        return this._midiEventData;\r\n    }\r\n    \r\n    set midiEventData(midiEventData: string){\r\n        this._midiEventData = midiEventData;\r\n    }\r\n\r\n    get loadEvent(): boolean{\r\n        return this._loadEvent;\r\n    }\r\n    \r\n    set loadEvent(loadEvent: boolean){\r\n        this._loadEvent = loadEvent;\r\n    }\r\n\r\n    public getDataLength(){\r\n        return this.midiEventData.length / 2;\r\n    }\r\n\r\n    public static getMidiEventData(deltaTime: number, midiData: string): MidiEvent {\r\n        let firstEventByte: string = ConvertionUtil.convertBinaryStringToHexString(midiData.substr(0, 1)); \r\n        switch (firstEventByte.charAt(0)) {\r\n            case '8':\r\n                return new MidiEvent(ConvertionUtil.getDeltaTimeStringFromNumber(deltaTime)\r\n                                    ,MidiEventType.MIDI_EVENT\r\n                                    ,ConvertionUtil.convertBinaryStringToHexString(midiData.substr(0, 3))\r\n                                    ,true);\r\n            case '9':\r\n                return new MidiEvent(ConvertionUtil.getDeltaTimeStringFromNumber(deltaTime)\r\n                                    ,MidiEventType.MIDI_EVENT\r\n                                    ,ConvertionUtil.convertBinaryStringToHexString(midiData.substr(0, 3))\r\n                                    ,true);\r\n            case 'a':\r\n                return new MidiEvent(''\r\n                                    ,MidiEventType.MIDI_EVENT\r\n                                    ,ConvertionUtil.convertBinaryStringToHexString(midiData.substr(0, 3))\r\n                                    ,false);    \r\n            case 'b':\r\n                return new MidiEvent(''\r\n                                    ,MidiEventType.MIDI_EVENT\r\n                                    ,ConvertionUtil.convertBinaryStringToHexString(midiData.substr(0, 3))\r\n                                    ,false); \r\n            case 'c':\r\n                return new MidiEvent(''\r\n                                    ,MidiEventType.MIDI_EVENT\r\n                                    ,ConvertionUtil.convertBinaryStringToHexString(midiData.substr(0, 2))\r\n                                    ,false); \r\n            case 'd':\r\n                return new MidiEvent(''\r\n                                    ,MidiEventType.MIDI_EVENT\r\n                                    ,ConvertionUtil.convertBinaryStringToHexString(midiData.substr(0, 2))\r\n                                    ,false); \r\n            case 'e' || 'e':\r\n                return new MidiEvent(''\r\n                                    ,MidiEventType.MIDI_EVENT\r\n                                    ,ConvertionUtil.convertBinaryStringToHexString(midiData.substr(0, 3))\r\n                                    ,false); \r\n            case 'f':\r\n                if (firstEventByte == 'f0' || firstEventByte == 'f7') {\r\n                    return new MidiEvent(''\r\n                                        ,MidiEventType.MIDI_EVENT\r\n                                        ,ConvertionUtil.convertBinaryStringToHexString(midiData.substr(0, 2 + ConvertionUtil.convertBinaryStringToNumber(midiData.charAt(1))))\r\n                                        ,false);\r\n\r\n                }\r\n                if (firstEventByte == 'ff') {\r\n                    let eventTypeByte: string = ConvertionUtil.convertBinaryStringToHexString(midiData.charAt(1)); \r\n                    return new MidiEvent(ConvertionUtil.getDeltaTimeStringFromNumber(deltaTime)\r\n                                        ,MidiEventType.MIDI_EVENT\r\n                                        ,ConvertionUtil.convertBinaryStringToHexString(midiData.substr(0, 3 + ConvertionUtil.convertBinaryStringToNumber(midiData.charAt(2))))\r\n                                        ,eventTypeByte == '58' || eventTypeByte == '59' || eventTypeByte == '2f');\r\n                }\r\n                throw Error('Não mapeado...')\r\n            default:\r\n                throw Error('Não mapeado...')\r\n        }\r\n       //return null;\r\n    }\r\n    \r\n}\r\n\r\nenum MidiType {\r\n    TYPE_0=0, TYPE_1=1, TYPE_2=2 \r\n}\r\n\r\nenum MidiEventType {\r\n    MIDI_EVENT, SYSEX_EVENT, META_EVENT\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/midi.util/midi.ts","export class ConvertionUtil {\r\n\r\n    public static convertBinaryStringToNumber(binaryString: string): number {\r\n        let hexString: string = ConvertionUtil.convertBinaryStringToHexString(binaryString);\r\n        return parseInt(hexString, 16);\r\n    }\r\n\r\n    public static convertBinaryStringToHexString(binaryString: string): string {\r\n        let hexString: string = '';\r\n        let tempHexString: string;\r\n        for (let i = 0; i < binaryString.length; i++) {\r\n            tempHexString = binaryString.charCodeAt(i).toString(16);\r\n            if (tempHexString.length < 2) {\r\n                tempHexString = '0' + tempHexString;\r\n            }\r\n            hexString += tempHexString;\r\n        }\r\n        return hexString;\r\n    }\r\n\r\n    public static isLastDeltaTimeByte(binaryString: string): boolean {\r\n        let binString: string = binaryString.charCodeAt(0).toString(2);\r\n        return !(binString.length == 8 && binString.charAt(0) == '1');\r\n    }\r\n\r\n    public static calculateDeltaTime(binaryString: string) : number {\r\n        let binaryDeltaTime: string = '';\r\n        for (let str of binaryString) {\r\n            let aaa = str.charCodeAt(0);\r\n            let bbb = str.charCodeAt(0).toString(2);\r\n            binaryDeltaTime += this.completeBits(str.charCodeAt(0).toString(2), 7);\r\n        }\r\n        return parseInt(binaryDeltaTime, 2);\r\n    }\r\n\r\n    public static getDeltaTimeStringFromNumber(deltaTime: number){\r\n        let tempDeltaTimeBinary: string = deltaTime.toString(2);\r\n        let deltaTimeBinary: string = '';\r\n        let lastByte = false;\r\n\r\n        while (tempDeltaTimeBinary.length >= 7) {\r\n            deltaTimeBinary = (lastByte ? '1' : '0') + tempDeltaTimeBinary.substr(tempDeltaTimeBinary.length - 7, 7) + deltaTimeBinary;\r\n            if (!lastByte) {\r\n                lastByte = true;\r\n            } \r\n            tempDeltaTimeBinary = tempDeltaTimeBinary.substr(0, tempDeltaTimeBinary.length - 7);\r\n        }\r\n\r\n        if (tempDeltaTimeBinary.length > 0) {\r\n            for (let i = tempDeltaTimeBinary.length; i < 7; i++) {\r\n                tempDeltaTimeBinary = '0' + tempDeltaTimeBinary;\r\n            }\r\n            deltaTimeBinary = (lastByte ? '1' : '0') + tempDeltaTimeBinary.substr(tempDeltaTimeBinary.length - 7, 7) + deltaTimeBinary;\r\n            if (!lastByte) {\r\n                lastByte = true;\r\n            } \r\n        }\r\n\r\n        let hexDeltaTime: string = parseInt(deltaTimeBinary, 2).toString(16);\r\n        return (hexDeltaTime.length % 2 == 1 ? '0' : '') + hexDeltaTime;\r\n    }\r\n\r\n    private static completeBits(binaryString: string, maxBits: number = 8): string {\r\n        if (binaryString.length >= maxBits) {\r\n            return binaryString.substr(binaryString.length - maxBits, maxBits);\r\n        }\r\n        let newBinaryString: string = binaryString;\r\n        for (let i = binaryString.length; i < maxBits; i++) {\r\n            newBinaryString = '0' + newBinaryString;\r\n        }\r\n        return newBinaryString;\r\n    } \r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/midi.util/hexa.ts"],"sourceRoot":""}